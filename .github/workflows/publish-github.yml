name: Publish Packages

on:
  push:
    branches: [ dev ]

jobs: 
  build:
    runs-on: ubuntu-latest
    env:
      APP_NAME: FluentEmail                                        # set this to your application's name
      GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}   # set this to access token to github.com
      GITHUB_API_KEY: ${{ secrets.GH_NUGET }}                   # set this to access token to github.com
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}               # set this to access token to nuget.org
 
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: set APP_VERSION based on repo w/MinVer
      run: |
        dotnet tool install -g minver-cli
        APP_VERSION=`minver -t v -d preview`
        echo "Adding version to GITHUB_ENV: APP_VERSION=$APP_VERSION"
        echo "APP_VERSION=$APP_VERSION >> $GITHUB_ENV"

    - name: Find and Replace
      uses: jafin/gha-search-replace@0.1.2-alpha
      with:
        include: "**/Directory.Build.props"
        search: '{"re":"__REGEXP /lukencode/gi"}'
        replace: "jafin"

    - name: Cat for GitHub Actions
      uses: pCYSl5EDgo/cat@1.0.0
      id: buildprops
      with:
        path: src/Directory.Build.props
    - name: output changed file
      run: echo $TEXT
      env: 
        TEXT: ${{ steps.buildprops.outputs.text}}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Pack
      run: dotnet pack --configuration Release

    - name: Add Nuget sources
      run: |
          dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json --name github

    - name: Upload NuGet package
      uses: actions/upload-artifact@v2.2.1
      with:
        name: ${{ env.APP_NAME }}
        path: "**/*.nupkg"
        
    - name: NuGet push on GitHub
      run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.GITHUB_API_KEY }} --skip-duplicate --no-symbols true

    # - name: Publish FluentEmail.Core
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/FluentEmail.Core/FluentEmail.Core.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0
    # - name: Publish FluentEmail.Smtp
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Senders/FluentEmail.Smtp/FluentEmail.Smtp.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0
    # - name: Publish FluentEmail.Sendgrid
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Senders/FluentEmail.SendGrid/FluentEmail.SendGrid.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0

    # #- name: Publish FluentEmail.MailTrap
    # #  uses: brandedoutcast/publish-nuget@v2.5.2
    # #  with:
    # #      PROJECT_FILE_PATH: src/Senders/FluentEmail.Mailtrap/FluentEmail.Mailtrap.csproj
    # #      NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    # #      NUGET_SOURCE: ${{ env.NUGET_PATH }}
    # - name: Publish FluentEmail.MailKit
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Senders/FluentEmail.MailKit/FluentEmail.MailKit.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0

    # - name: Publish FluentEmail.Mailgun
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Senders/FluentEmail.Mailgun/FluentEmail.Mailgun.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0

    # - name: Publish FluentEmail.Razor
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Renderers/FluentEmail.Razor/FluentEmail.Razor.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0

    # - name: Publish FluentEmail.Liquid
    #   uses: brandedoutcast/publish-nuget@v2.5.2
    #   with:
    #       PROJECT_FILE_PATH: src/Renderers/FluentEmail.Liquid/FluentEmail.Liquid.csproj
    #       NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    #       NUGET_SOURCE: ${{ env.NUGET_PATH }}
    #       INCLUDE_SYMBOLS: true
    #       # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #       VERSION_STATIC: 1.0.0

    # # This is currently maintained separately
    # #- name: Publish FluentEmail.Graph
    # #  uses: brandedoutcast/publish-nuget@v2.5.2
    # #  with:
    # #      PROJECT_FILE_PATH: src/Senders/FluentEmail.Graph/FluentEmail.Graph.csproj
    # #      NUGET_KEY: ${{ env.NUGET_AUTH_TOKEN }}
    # #      NUGET_SOURCE: ${{ env.NUGET_PATH }}
